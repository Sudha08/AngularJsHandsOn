Angular JS
--------------------------------------------------------------

What is Angular Js?
---------------------
- MVC style javascript framework for creating single page apps
- Write our code in the way Angular JS wants us to, so we can use it's 
  features in our projects
--------------------------------------------------------------

Features:
---------------
- 2 way data binding
- templating
- DOM interaction
- filters
- directives
- many more...
--------------------------------------------------------------

Single Page Apps
------------------
- Angular JS primarily used to make single page, dat driven applications
- Additonal content brought into the web page without the need to refresh
- Use 'Views' (the V in MVC) to achieve this
--------------------------------------------------------------

What will be covered?
----------------------
- MVC overview
- 2-way data binding
- filters, directives and expressions
- controllers and how to use them
- views and routing
- animations
- form validation
- create a to-do-list application
--------------------------------------------------------------

Prerequisites
---------------
- Javascript (essential)
- HTML (essential)
- CSS (optional)
- JSON (optional)
--------------------------------------------------------------

MVC Architecture
------------------

                        Application
                             |
                             |
                     -----------------    
                    |        |        |
                    |        |        |
                   ___      ___      ___
                  | M |    | V |    | C |
                  |___|    |___|    |___|

Model:
-------
- Think of model as data
- JSON, database data, etc.

View:
-------
- Used to display content & data to a user in a browser
- HTML
- Use expressions to insert data into views - <html tag> {{data}} </html tag>

controller:
------------
- control th functionality of our views
- performs the interaction between our models and our views
- different controllers for different areas in our application

Example:
---------
- User clicks a 'show users' button in a view
- The 'UserController' recognizes the button click event and performs a function
- The function communicate with the 'users' model and retrieves all the user data
- The controller passes accessibility to this data to the view, which then displays
  it to the end user via expressions
--------------------------------------------------------------

MVW - architecture used in AngularJs
--------------------------------------

- MVC - Model View Controller
- MVW - Model View Whatever   W - can be Controller/ VM - View Model (as in MVVM)
                                    / P - Presenter
        (MVW also called as MV*)
- Undelying principle - Separation of Concerns

https://stackoverflow.com/questions/13329485/what-does-mvw-stand-for
--------------------------------------------------------------

Download Angular.js
---------------------

https://angularjs.org -> download angular.min.js -> minified version & add it in the app
--------------------------------------------------------------

2 way data binding: 
---------------------

- refer 2waydatabinding.html
--------------------------------------------------------------

Directives:
------------

https://docs.angularjs.org/api/ng/directive/ngClassOdd 
--------------------------------------------------------------

Expressions:
-------------

- refer expressions.html

- ng-init - is the directive used to initialize our app with some data 
--------------------------------------------------------------

ng-repeat directive : 
----------------------

- refer ng-repeat.html
--------------------------------------------------------------

Angular Modules: 
--------------------

- refer app.js, index.html (ng-app = "myApp")

 var myApp = angular.module('myApp', []);
      |                       |           
      V                       V
    just a variable          name of the module - used in ng-app
    name. can be anything

    [] -> Array to store the dependencies (extra features for the app)

    - By doing this, the app is namespaced and won't be disturbed by any external scripts and variables
    - All the application code will reside in this module

    - To let Angular know that this module will be controlling the app, use it in the 'ng-app' directive
    - Module can be considered as the container for different components like controllers, config & run methods

--------------------------------------------------------------

Controllers:
-------------
- refer - index.html, app.js
- $scope - is a dependency
- In MVC, view - index.html, controller - AvengerController, model - data in $scope
--------------------------------------------------------------











